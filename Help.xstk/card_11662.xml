<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE card PUBLIC "-//Apple, Inc.//DTD card V 2.0//EN" "" >
<card>
	<id>11662</id>
	<filler1>0</filler1>
	<cantDelete> <false /> </cantDelete>
	<showPict> <true /> </showPict>
	<dontSearch> <false /> </dontSearch>
	<owner>4421</owner>
	<content>
		<layer>background</layer>
		<id>1</id>
		<text>stackSpace</text>
	</content>
	<content>
		<layer>background</layer>
		<id>2</id>
		<text>Card 1 of 1</text>
	</content>
	<content>
		<layer>background</layer>
		<id>103</id>
		<text>Functions32809 56991 </text>
	</content>
	<content>
		<layer>background</layer>
		<id>9</id>
		<text>he stackSpacestackSpace()put the stackSpace into howMuchValue returned: an integer representing the free space, in bytes, in HyperCard’s memory stackThe memory that HyperCard can use is divided into two parts—the heap and the stack. HeapSpace  returns the amount of memory that’s available in the heap portion. StackSpace returns the amountthat’s available in the stack portion. </text>
		<stylerun>
			<offset>0</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>61</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>241</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>250</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>319</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>329</offset>
			<id>43</id>
		</stylerun>
	</content>
	<content>
		<layer>background</layer>
		<id>59</id>
		<text>put stackSpace() into roomEnoughif roomEnough &gt; 8000 then ...</text>
	</content>
	<content>
		<layer>background</layer>
		<id>10</id>
		<text>The memory in HyperCard’s stack determines, for example, the number of times you can call a recursive handler.</text>
	</content>
	<name>stackSpace</name>
	<script></script>
</card>
