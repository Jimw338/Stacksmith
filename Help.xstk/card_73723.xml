<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE card PUBLIC "-//Apple, Inc.//DTD card V 2.0//EN" "" >
<card>
	<id>73723</id>
	<filler1>0</filler1>
	<cantDelete> <false /> </cantDelete>
	<showPict> <true /> </showPict>
	<dontSearch> <false /> </dontSearch>
	<owner>4421</owner>
	<content>
		<layer>background</layer>
		<id>1</id>
		<text>appleEvent</text>
	</content>
	<content>
		<layer>background</layer>
		<id>2</id>
		<text>Card 1 of 2</text>
	</content>
	<content>
		<layer>background</layer>
		<id>103</id>
		<text>System messages97817 98925 </text>
	</content>
	<content>
		<layer>background</layer>
		<id>9</id>
		<text>ppleEvent class, id, senderHandler:on appleEvent class, id, sender   statementsend appleEventHyperCard sends the appleEvent message to the current card when it receives an Apple event from another program. It sends the message at idle time as soon as all pending handlers have finished running.</text>
		<stylerun>
			<offset>0</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>11</offset>
			<id>291</id>
		</stylerun>
		<stylerun>
			<offset>28</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>29</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>40</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>75</offset>
			<id>289</id>
		</stylerun>
		<stylerun>
			<offset>85</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>102</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>121</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>132</offset>
			<id>43</id>
		</stylerun>
	</content>
	<content>
		<layer>background</layer>
		<id>10</id>
		<text>lass is the general category of the event (such as aevt or misc), id is the actual event received (such as odoc, pdoc, dosc, or eval), and sender is the name of the application or process that sent the event.Because Apple event commands are usually generated by other processes, you may want to check to make sure that they are not destructive. Click Examples to see a handler, written for the Home stack, that intercepts an incoming Apple event.</text>
		<stylerun>
			<offset>0</offset>
			<id>291</id>
		</stylerun>
		<stylerun>
			<offset>5</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>6</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>51</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>57</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>59</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>64</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>66</offset>
			<id>291</id>
		</stylerun>
		<stylerun>
			<offset>70</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>107</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>126</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>128</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>133</offset>
			<id>43</id>
		</stylerun>
		<stylerun>
			<offset>139</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>140</offset>
			<id>291</id>
		</stylerun>
		<stylerun>
			<offset>146</offset>
			<id>44</id>
		</stylerun>
		<stylerun>
			<offset>147</offset>
			<id>43</id>
		</stylerun>
	</content>
	<content>
		<layer>background</layer>
		<id>59</id>
		<text>on appleEvent class, id, sender  answer "HyperCard has received an AppleEvent!" &amp; return &amp; ¬  "The class is" &amp;&amp; class &amp; return &amp; ¬  "The ID is" &amp;&amp; id &amp; return &amp; ¬  "The Sender is" &amp;&amp; sender with "Allow" or "Deny"  if it is "Allow" then pass appleEventend appleEvent</text>
	</content>
	<content>
		<layer>background</layer>
		<id>114</id>
		<text>PPC Toolbox	AppleScript</text>
	</content>
	<name>appleEvent</name>
	<script></script>
</card>
